server:
  port: 9201

spring:
  application:
    name: cloud-consumer-order-hystrix-service

eureka:
  client:
    # true表示将自己注册进EurekaServer，默认true
    register-with-eureka: false
    # 是否从EurekaServer抓取已有的注册信息，默认为true，单节点无所谓，集群必须设置为true才能配合Ribbon使用负载均衡
    # 服务调用方需要设置为true，否则抛出java.lang.IllegalStateException: No instances available for CLOUD-PROVIDER-PAYMENT-SERVICE异常
    fetch-registry: true
    # 检索服务实例清单的时间间隔（单位：秒），默认30秒
    registry-fetch-interval-seconds: 30
    # 当服务获取超时后，最大尝试次数，默认10次
    cache-refresh-executor-exponential-back-off-bound: 10
    serviceUrl:
      defaultZone: http://node1:7001/eureka,http://node2:7002/eureka

# 超时控制，两种方式都生效，默认1秒，两种都配置的话实测feign配置生效或者优先级高
ribbon:
  ConnectTimeout: 5000
  ReadTimeout: 5000

feign:
  client:
    config:
      default:
        read-timeout: 3000
        connect-timeout: 3000

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000
        timeout:
          enable: true

